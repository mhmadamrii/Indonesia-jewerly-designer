/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from "@tanstack/react-start/server";

import { Route as rootRouteImport } from "./routes/__root";
import { Route as DashboardsRouteRouteImport } from "./routes/dashboards/route";
import { Route as mainRouteRouteImport } from "./routes/(main)/route";
import { Route as authRouteRouteImport } from "./routes/(auth)/route";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as DashboardsIndexRouteImport } from "./routes/dashboards/index";
import { Route as marketingMarketingRouteImport } from "./routes/(marketing)/marketing";
import { Route as mainPublishingRouteImport } from "./routes/(main)/publishing";
import { Route as mainMySalesRouteImport } from "./routes/(main)/my-sales";
import { Route as mainMyModelsRouteImport } from "./routes/(main)/my-models";
import { Route as mainDashboardRouteImport } from "./routes/(main)/dashboard";
import { Route as mainCartRouteImport } from "./routes/(main)/cart";
import { Route as authSignupRouteImport } from "./routes/(auth)/signup";
import { Route as authLoginRouteImport } from "./routes/(auth)/login";
import { Route as authAuthRouteImport } from "./routes/(auth)/auth";
import { Route as adminAdminRouteImport } from "./routes/(admin)/admin";
import { Route as mainProfileIndexRouteImport } from "./routes/(main)/profile.index";
import { Route as mainProfileUsernameRouteImport } from "./routes/(main)/profile.$username";
import { Route as mainAssetsAssetIdRouteImport } from "./routes/(main)/assets.$assetId";
import { ServerRoute as ApiAuthSplatServerRouteImport } from "./routes/api/auth/$";

const rootServerRouteImport = createServerRootRoute();

const DashboardsRouteRoute = DashboardsRouteRouteImport.update({
  id: "/dashboards",
  path: "/dashboards",
  getParentRoute: () => rootRouteImport,
} as any);
const mainRouteRoute = mainRouteRouteImport.update({
  id: "/(main)",
  getParentRoute: () => rootRouteImport,
} as any);
const authRouteRoute = authRouteRouteImport.update({
  id: "/(auth)",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const DashboardsIndexRoute = DashboardsIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => DashboardsRouteRoute,
} as any);
const marketingMarketingRoute = marketingMarketingRouteImport.update({
  id: "/(marketing)/marketing",
  path: "/marketing",
  getParentRoute: () => rootRouteImport,
} as any);
const mainPublishingRoute = mainPublishingRouteImport.update({
  id: "/publishing",
  path: "/publishing",
  getParentRoute: () => mainRouteRoute,
} as any);
const mainMySalesRoute = mainMySalesRouteImport.update({
  id: "/my-sales",
  path: "/my-sales",
  getParentRoute: () => mainRouteRoute,
} as any);
const mainMyModelsRoute = mainMyModelsRouteImport.update({
  id: "/my-models",
  path: "/my-models",
  getParentRoute: () => mainRouteRoute,
} as any);
const mainDashboardRoute = mainDashboardRouteImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => mainRouteRoute,
} as any);
const mainCartRoute = mainCartRouteImport.update({
  id: "/cart",
  path: "/cart",
  getParentRoute: () => mainRouteRoute,
} as any);
const authSignupRoute = authSignupRouteImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => authRouteRoute,
} as any);
const authLoginRoute = authLoginRouteImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => authRouteRoute,
} as any);
const authAuthRoute = authAuthRouteImport.update({
  id: "/auth",
  path: "/auth",
  getParentRoute: () => authRouteRoute,
} as any);
const adminAdminRoute = adminAdminRouteImport.update({
  id: "/(admin)/admin",
  path: "/admin",
  getParentRoute: () => rootRouteImport,
} as any);
const mainProfileIndexRoute = mainProfileIndexRouteImport.update({
  id: "/profile/",
  path: "/profile/",
  getParentRoute: () => mainRouteRoute,
} as any);
const mainProfileUsernameRoute = mainProfileUsernameRouteImport.update({
  id: "/profile/$username",
  path: "/profile/$username",
  getParentRoute: () => mainRouteRoute,
} as any);
const mainAssetsAssetIdRoute = mainAssetsAssetIdRouteImport.update({
  id: "/assets/$assetId",
  path: "/assets/$assetId",
  getParentRoute: () => mainRouteRoute,
} as any);
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: "/api/auth/$",
  path: "/api/auth/$",
  getParentRoute: () => rootServerRouteImport,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof mainRouteRouteWithChildren;
  "/dashboards": typeof DashboardsRouteRouteWithChildren;
  "/admin": typeof adminAdminRoute;
  "/auth": typeof authAuthRoute;
  "/login": typeof authLoginRoute;
  "/signup": typeof authSignupRoute;
  "/cart": typeof mainCartRoute;
  "/dashboard": typeof mainDashboardRoute;
  "/my-models": typeof mainMyModelsRoute;
  "/my-sales": typeof mainMySalesRoute;
  "/publishing": typeof mainPublishingRoute;
  "/marketing": typeof marketingMarketingRoute;
  "/dashboards/": typeof DashboardsIndexRoute;
  "/assets/$assetId": typeof mainAssetsAssetIdRoute;
  "/profile/$username": typeof mainProfileUsernameRoute;
  "/profile": typeof mainProfileIndexRoute;
}
export interface FileRoutesByTo {
  "/": typeof mainRouteRouteWithChildren;
  "/admin": typeof adminAdminRoute;
  "/auth": typeof authAuthRoute;
  "/login": typeof authLoginRoute;
  "/signup": typeof authSignupRoute;
  "/cart": typeof mainCartRoute;
  "/dashboard": typeof mainDashboardRoute;
  "/my-models": typeof mainMyModelsRoute;
  "/my-sales": typeof mainMySalesRoute;
  "/publishing": typeof mainPublishingRoute;
  "/marketing": typeof marketingMarketingRoute;
  "/dashboards": typeof DashboardsIndexRoute;
  "/assets/$assetId": typeof mainAssetsAssetIdRoute;
  "/profile/$username": typeof mainProfileUsernameRoute;
  "/profile": typeof mainProfileIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/(auth)": typeof authRouteRouteWithChildren;
  "/(main)": typeof mainRouteRouteWithChildren;
  "/dashboards": typeof DashboardsRouteRouteWithChildren;
  "/(admin)/admin": typeof adminAdminRoute;
  "/(auth)/auth": typeof authAuthRoute;
  "/(auth)/login": typeof authLoginRoute;
  "/(auth)/signup": typeof authSignupRoute;
  "/(main)/cart": typeof mainCartRoute;
  "/(main)/dashboard": typeof mainDashboardRoute;
  "/(main)/my-models": typeof mainMyModelsRoute;
  "/(main)/my-sales": typeof mainMySalesRoute;
  "/(main)/publishing": typeof mainPublishingRoute;
  "/(marketing)/marketing": typeof marketingMarketingRoute;
  "/dashboards/": typeof DashboardsIndexRoute;
  "/(main)/assets/$assetId": typeof mainAssetsAssetIdRoute;
  "/(main)/profile/$username": typeof mainProfileUsernameRoute;
  "/(main)/profile/": typeof mainProfileIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/dashboards"
    | "/admin"
    | "/auth"
    | "/login"
    | "/signup"
    | "/cart"
    | "/dashboard"
    | "/my-models"
    | "/my-sales"
    | "/publishing"
    | "/marketing"
    | "/dashboards/"
    | "/assets/$assetId"
    | "/profile/$username"
    | "/profile";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/admin"
    | "/auth"
    | "/login"
    | "/signup"
    | "/cart"
    | "/dashboard"
    | "/my-models"
    | "/my-sales"
    | "/publishing"
    | "/marketing"
    | "/dashboards"
    | "/assets/$assetId"
    | "/profile/$username"
    | "/profile";
  id:
    | "__root__"
    | "/"
    | "/(auth)"
    | "/(main)"
    | "/dashboards"
    | "/(admin)/admin"
    | "/(auth)/auth"
    | "/(auth)/login"
    | "/(auth)/signup"
    | "/(main)/cart"
    | "/(main)/dashboard"
    | "/(main)/my-models"
    | "/(main)/my-sales"
    | "/(main)/publishing"
    | "/(marketing)/marketing"
    | "/dashboards/"
    | "/(main)/assets/$assetId"
    | "/(main)/profile/$username"
    | "/(main)/profile/";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  authRouteRoute: typeof authRouteRouteWithChildren;
  mainRouteRoute: typeof mainRouteRouteWithChildren;
  DashboardsRouteRoute: typeof DashboardsRouteRouteWithChildren;
  adminAdminRoute: typeof adminAdminRoute;
  marketingMarketingRoute: typeof marketingMarketingRoute;
}
export interface FileServerRoutesByFullPath {
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
}
export interface FileServerRoutesByTo {
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport;
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath;
  fullPaths: "/api/auth/$";
  fileServerRoutesByTo: FileServerRoutesByTo;
  to: "/api/auth/$";
  id: "__root__" | "/api/auth/$";
  fileServerRoutesById: FileServerRoutesById;
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/dashboards": {
      id: "/dashboards";
      path: "/dashboards";
      fullPath: "/dashboards";
      preLoaderRoute: typeof DashboardsRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)": {
      id: "/(main)";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof mainRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(auth)": {
      id: "/(auth)";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof authRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/dashboards/": {
      id: "/dashboards/";
      path: "/";
      fullPath: "/dashboards/";
      preLoaderRoute: typeof DashboardsIndexRouteImport;
      parentRoute: typeof DashboardsRouteRoute;
    };
    "/(marketing)/marketing": {
      id: "/(marketing)/marketing";
      path: "/marketing";
      fullPath: "/marketing";
      preLoaderRoute: typeof marketingMarketingRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/publishing": {
      id: "/(main)/publishing";
      path: "/publishing";
      fullPath: "/publishing";
      preLoaderRoute: typeof mainPublishingRouteImport;
      parentRoute: typeof mainRouteRoute;
    };
    "/(main)/my-sales": {
      id: "/(main)/my-sales";
      path: "/my-sales";
      fullPath: "/my-sales";
      preLoaderRoute: typeof mainMySalesRouteImport;
      parentRoute: typeof mainRouteRoute;
    };
    "/(main)/my-models": {
      id: "/(main)/my-models";
      path: "/my-models";
      fullPath: "/my-models";
      preLoaderRoute: typeof mainMyModelsRouteImport;
      parentRoute: typeof mainRouteRoute;
    };
    "/(main)/dashboard": {
      id: "/(main)/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof mainDashboardRouteImport;
      parentRoute: typeof mainRouteRoute;
    };
    "/(main)/cart": {
      id: "/(main)/cart";
      path: "/cart";
      fullPath: "/cart";
      preLoaderRoute: typeof mainCartRouteImport;
      parentRoute: typeof mainRouteRoute;
    };
    "/(auth)/signup": {
      id: "/(auth)/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof authSignupRouteImport;
      parentRoute: typeof authRouteRoute;
    };
    "/(auth)/login": {
      id: "/(auth)/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof authLoginRouteImport;
      parentRoute: typeof authRouteRoute;
    };
    "/(auth)/auth": {
      id: "/(auth)/auth";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof authAuthRouteImport;
      parentRoute: typeof authRouteRoute;
    };
    "/(admin)/admin": {
      id: "/(admin)/admin";
      path: "/admin";
      fullPath: "/admin";
      preLoaderRoute: typeof adminAdminRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/profile/": {
      id: "/(main)/profile/";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof mainProfileIndexRouteImport;
      parentRoute: typeof mainRouteRoute;
    };
    "/(main)/profile/$username": {
      id: "/(main)/profile/$username";
      path: "/profile/$username";
      fullPath: "/profile/$username";
      preLoaderRoute: typeof mainProfileUsernameRouteImport;
      parentRoute: typeof mainRouteRoute;
    };
    "/(main)/assets/$assetId": {
      id: "/(main)/assets/$assetId";
      path: "/assets/$assetId";
      fullPath: "/assets/$assetId";
      preLoaderRoute: typeof mainAssetsAssetIdRouteImport;
      parentRoute: typeof mainRouteRoute;
    };
  }
}
declare module "@tanstack/react-start/server" {
  interface ServerFileRoutesByPath {
    "/api/auth/$": {
      id: "/api/auth/$";
      path: "/api/auth/$";
      fullPath: "/api/auth/$";
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
  }
}

interface authRouteRouteChildren {
  authAuthRoute: typeof authAuthRoute;
  authLoginRoute: typeof authLoginRoute;
  authSignupRoute: typeof authSignupRoute;
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authAuthRoute: authAuthRoute,
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
};

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
);

interface mainRouteRouteChildren {
  mainCartRoute: typeof mainCartRoute;
  mainDashboardRoute: typeof mainDashboardRoute;
  mainMyModelsRoute: typeof mainMyModelsRoute;
  mainMySalesRoute: typeof mainMySalesRoute;
  mainPublishingRoute: typeof mainPublishingRoute;
  mainAssetsAssetIdRoute: typeof mainAssetsAssetIdRoute;
  mainProfileUsernameRoute: typeof mainProfileUsernameRoute;
  mainProfileIndexRoute: typeof mainProfileIndexRoute;
}

const mainRouteRouteChildren: mainRouteRouteChildren = {
  mainCartRoute: mainCartRoute,
  mainDashboardRoute: mainDashboardRoute,
  mainMyModelsRoute: mainMyModelsRoute,
  mainMySalesRoute: mainMySalesRoute,
  mainPublishingRoute: mainPublishingRoute,
  mainAssetsAssetIdRoute: mainAssetsAssetIdRoute,
  mainProfileUsernameRoute: mainProfileUsernameRoute,
  mainProfileIndexRoute: mainProfileIndexRoute,
};

const mainRouteRouteWithChildren = mainRouteRoute._addFileChildren(
  mainRouteRouteChildren,
);

interface DashboardsRouteRouteChildren {
  DashboardsIndexRoute: typeof DashboardsIndexRoute;
}

const DashboardsRouteRouteChildren: DashboardsRouteRouteChildren = {
  DashboardsIndexRoute: DashboardsIndexRoute,
};

const DashboardsRouteRouteWithChildren = DashboardsRouteRoute._addFileChildren(
  DashboardsRouteRouteChildren,
);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  mainRouteRoute: mainRouteRouteWithChildren,
  DashboardsRouteRoute: DashboardsRouteRouteWithChildren,
  adminAdminRoute: adminAdminRoute,
  marketingMarketingRoute: marketingMarketingRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
};
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>();
