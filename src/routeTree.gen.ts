/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from "@tanstack/react-start/server";

import { Route as rootRouteImport } from "./routes/__root";
import { Route as authRouteRouteImport } from "./routes/(auth)/route";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as mainPublishingRouteImport } from "./routes/(main)/publishing";
import { Route as mainPlaygroundRouteImport } from "./routes/(main)/playground";
import { Route as mainMySalesRouteImport } from "./routes/(main)/my-sales";
import { Route as mainMyModelsRouteImport } from "./routes/(main)/my-models";
import { Route as mainDashboardRouteImport } from "./routes/(main)/dashboard";
import { Route as mainCartRouteImport } from "./routes/(main)/cart";
import { Route as authAuthRouteImport } from "./routes/(auth)/auth";
import { Route as mainProfileIndexRouteImport } from "./routes/(main)/profile.index";
import { Route as mainProfileUsernameRouteImport } from "./routes/(main)/profile.$username";
import { Route as mainAssetsAssetIdRouteImport } from "./routes/(main)/assets.$assetId";
import { Route as mainChar126GeneralRouteRouteImport } from "./routes/(main)/~/general/route";
import { Route as mainChar126ArtistRouteRouteImport } from "./routes/(main)/~/artist/route";
import { Route as mainChar126GeneralPurchasedModelsIndexRouteImport } from "./routes/(main)/~/general/purchased-models/index";
import { Route as mainChar126GeneralFeedIndexRouteImport } from "./routes/(main)/~/general/feed/index";
import { Route as mainChar126GeneralFavoritesIndexRouteImport } from "./routes/(main)/~/general/favorites/index";
import { Route as mainChar126GeneralExploreIndexRouteImport } from "./routes/(main)/~/general/explore/index";
import { Route as mainChar126GeneralCartIndexRouteImport } from "./routes/(main)/~/general/cart/index";
import { Route as mainChar126ArtistPublishingIndexRouteImport } from "./routes/(main)/~/artist/publishing/index";
import { Route as mainChar126ArtistDashboardIndexRouteImport } from "./routes/(main)/~/artist/dashboard/index";
import { ServerRoute as ApiImagekitUploadServerRouteImport } from "./routes/api/imagekit/upload";
import { ServerRoute as ApiAuthSplatServerRouteImport } from "./routes/api/auth/$";

const rootServerRouteImport = createServerRootRoute();

const authRouteRoute = authRouteRouteImport.update({
  id: "/(auth)",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const mainPublishingRoute = mainPublishingRouteImport.update({
  id: "/(main)/publishing",
  path: "/publishing",
  getParentRoute: () => rootRouteImport,
} as any);
const mainPlaygroundRoute = mainPlaygroundRouteImport.update({
  id: "/(main)/playground",
  path: "/playground",
  getParentRoute: () => rootRouteImport,
} as any);
const mainMySalesRoute = mainMySalesRouteImport.update({
  id: "/(main)/my-sales",
  path: "/my-sales",
  getParentRoute: () => rootRouteImport,
} as any);
const mainMyModelsRoute = mainMyModelsRouteImport.update({
  id: "/(main)/my-models",
  path: "/my-models",
  getParentRoute: () => rootRouteImport,
} as any);
const mainDashboardRoute = mainDashboardRouteImport.update({
  id: "/(main)/dashboard",
  path: "/dashboard",
  getParentRoute: () => rootRouteImport,
} as any);
const mainCartRoute = mainCartRouteImport.update({
  id: "/(main)/cart",
  path: "/cart",
  getParentRoute: () => rootRouteImport,
} as any);
const authAuthRoute = authAuthRouteImport.update({
  id: "/auth",
  path: "/auth",
  getParentRoute: () => authRouteRoute,
} as any);
const mainProfileIndexRoute = mainProfileIndexRouteImport.update({
  id: "/(main)/profile/",
  path: "/profile/",
  getParentRoute: () => rootRouteImport,
} as any);
const mainProfileUsernameRoute = mainProfileUsernameRouteImport.update({
  id: "/(main)/profile/$username",
  path: "/profile/$username",
  getParentRoute: () => rootRouteImport,
} as any);
const mainAssetsAssetIdRoute = mainAssetsAssetIdRouteImport.update({
  id: "/(main)/assets/$assetId",
  path: "/assets/$assetId",
  getParentRoute: () => rootRouteImport,
} as any);
const mainChar126GeneralRouteRoute = mainChar126GeneralRouteRouteImport.update({
  id: "/(main)/~/general",
  path: "/~/general",
  getParentRoute: () => rootRouteImport,
} as any);
const mainChar126ArtistRouteRoute = mainChar126ArtistRouteRouteImport.update({
  id: "/(main)/~/artist",
  path: "/~/artist",
  getParentRoute: () => rootRouteImport,
} as any);
const mainChar126GeneralPurchasedModelsIndexRoute =
  mainChar126GeneralPurchasedModelsIndexRouteImport.update({
    id: "/purchased-models/",
    path: "/purchased-models/",
    getParentRoute: () => mainChar126GeneralRouteRoute,
  } as any);
const mainChar126GeneralFeedIndexRoute =
  mainChar126GeneralFeedIndexRouteImport.update({
    id: "/feed/",
    path: "/feed/",
    getParentRoute: () => mainChar126GeneralRouteRoute,
  } as any);
const mainChar126GeneralFavoritesIndexRoute =
  mainChar126GeneralFavoritesIndexRouteImport.update({
    id: "/favorites/",
    path: "/favorites/",
    getParentRoute: () => mainChar126GeneralRouteRoute,
  } as any);
const mainChar126GeneralExploreIndexRoute =
  mainChar126GeneralExploreIndexRouteImport.update({
    id: "/explore/",
    path: "/explore/",
    getParentRoute: () => mainChar126GeneralRouteRoute,
  } as any);
const mainChar126GeneralCartIndexRoute =
  mainChar126GeneralCartIndexRouteImport.update({
    id: "/cart/",
    path: "/cart/",
    getParentRoute: () => mainChar126GeneralRouteRoute,
  } as any);
const mainChar126ArtistPublishingIndexRoute =
  mainChar126ArtistPublishingIndexRouteImport.update({
    id: "/publishing/",
    path: "/publishing/",
    getParentRoute: () => mainChar126ArtistRouteRoute,
  } as any);
const mainChar126ArtistDashboardIndexRoute =
  mainChar126ArtistDashboardIndexRouteImport.update({
    id: "/dashboard/",
    path: "/dashboard/",
    getParentRoute: () => mainChar126ArtistRouteRoute,
  } as any);
const ApiImagekitUploadServerRoute = ApiImagekitUploadServerRouteImport.update({
  id: "/api/imagekit/upload",
  path: "/api/imagekit/upload",
  getParentRoute: () => rootServerRouteImport,
} as any);
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: "/api/auth/$",
  path: "/api/auth/$",
  getParentRoute: () => rootServerRouteImport,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof authRouteRouteWithChildren;
  "/auth": typeof authAuthRoute;
  "/cart": typeof mainCartRoute;
  "/dashboard": typeof mainDashboardRoute;
  "/my-models": typeof mainMyModelsRoute;
  "/my-sales": typeof mainMySalesRoute;
  "/playground": typeof mainPlaygroundRoute;
  "/publishing": typeof mainPublishingRoute;
  "/~/artist": typeof mainChar126ArtistRouteRouteWithChildren;
  "/~/general": typeof mainChar126GeneralRouteRouteWithChildren;
  "/assets/$assetId": typeof mainAssetsAssetIdRoute;
  "/profile/$username": typeof mainProfileUsernameRoute;
  "/profile": typeof mainProfileIndexRoute;
  "/~/artist/dashboard": typeof mainChar126ArtistDashboardIndexRoute;
  "/~/artist/publishing": typeof mainChar126ArtistPublishingIndexRoute;
  "/~/general/cart": typeof mainChar126GeneralCartIndexRoute;
  "/~/general/explore": typeof mainChar126GeneralExploreIndexRoute;
  "/~/general/favorites": typeof mainChar126GeneralFavoritesIndexRoute;
  "/~/general/feed": typeof mainChar126GeneralFeedIndexRoute;
  "/~/general/purchased-models": typeof mainChar126GeneralPurchasedModelsIndexRoute;
}
export interface FileRoutesByTo {
  "/": typeof authRouteRouteWithChildren;
  "/auth": typeof authAuthRoute;
  "/cart": typeof mainCartRoute;
  "/dashboard": typeof mainDashboardRoute;
  "/my-models": typeof mainMyModelsRoute;
  "/my-sales": typeof mainMySalesRoute;
  "/playground": typeof mainPlaygroundRoute;
  "/publishing": typeof mainPublishingRoute;
  "/~/artist": typeof mainChar126ArtistRouteRouteWithChildren;
  "/~/general": typeof mainChar126GeneralRouteRouteWithChildren;
  "/assets/$assetId": typeof mainAssetsAssetIdRoute;
  "/profile/$username": typeof mainProfileUsernameRoute;
  "/profile": typeof mainProfileIndexRoute;
  "/~/artist/dashboard": typeof mainChar126ArtistDashboardIndexRoute;
  "/~/artist/publishing": typeof mainChar126ArtistPublishingIndexRoute;
  "/~/general/cart": typeof mainChar126GeneralCartIndexRoute;
  "/~/general/explore": typeof mainChar126GeneralExploreIndexRoute;
  "/~/general/favorites": typeof mainChar126GeneralFavoritesIndexRoute;
  "/~/general/feed": typeof mainChar126GeneralFeedIndexRoute;
  "/~/general/purchased-models": typeof mainChar126GeneralPurchasedModelsIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/(auth)": typeof authRouteRouteWithChildren;
  "/(auth)/auth": typeof authAuthRoute;
  "/(main)/cart": typeof mainCartRoute;
  "/(main)/dashboard": typeof mainDashboardRoute;
  "/(main)/my-models": typeof mainMyModelsRoute;
  "/(main)/my-sales": typeof mainMySalesRoute;
  "/(main)/playground": typeof mainPlaygroundRoute;
  "/(main)/publishing": typeof mainPublishingRoute;
  "/(main)/~/artist": typeof mainChar126ArtistRouteRouteWithChildren;
  "/(main)/~/general": typeof mainChar126GeneralRouteRouteWithChildren;
  "/(main)/assets/$assetId": typeof mainAssetsAssetIdRoute;
  "/(main)/profile/$username": typeof mainProfileUsernameRoute;
  "/(main)/profile/": typeof mainProfileIndexRoute;
  "/(main)/~/artist/dashboard/": typeof mainChar126ArtistDashboardIndexRoute;
  "/(main)/~/artist/publishing/": typeof mainChar126ArtistPublishingIndexRoute;
  "/(main)/~/general/cart/": typeof mainChar126GeneralCartIndexRoute;
  "/(main)/~/general/explore/": typeof mainChar126GeneralExploreIndexRoute;
  "/(main)/~/general/favorites/": typeof mainChar126GeneralFavoritesIndexRoute;
  "/(main)/~/general/feed/": typeof mainChar126GeneralFeedIndexRoute;
  "/(main)/~/general/purchased-models/": typeof mainChar126GeneralPurchasedModelsIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/auth"
    | "/cart"
    | "/dashboard"
    | "/my-models"
    | "/my-sales"
    | "/playground"
    | "/publishing"
    | "/~/artist"
    | "/~/general"
    | "/assets/$assetId"
    | "/profile/$username"
    | "/profile"
    | "/~/artist/dashboard"
    | "/~/artist/publishing"
    | "/~/general/cart"
    | "/~/general/explore"
    | "/~/general/favorites"
    | "/~/general/feed"
    | "/~/general/purchased-models";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/auth"
    | "/cart"
    | "/dashboard"
    | "/my-models"
    | "/my-sales"
    | "/playground"
    | "/publishing"
    | "/~/artist"
    | "/~/general"
    | "/assets/$assetId"
    | "/profile/$username"
    | "/profile"
    | "/~/artist/dashboard"
    | "/~/artist/publishing"
    | "/~/general/cart"
    | "/~/general/explore"
    | "/~/general/favorites"
    | "/~/general/feed"
    | "/~/general/purchased-models";
  id:
    | "__root__"
    | "/"
    | "/(auth)"
    | "/(auth)/auth"
    | "/(main)/cart"
    | "/(main)/dashboard"
    | "/(main)/my-models"
    | "/(main)/my-sales"
    | "/(main)/playground"
    | "/(main)/publishing"
    | "/(main)/~/artist"
    | "/(main)/~/general"
    | "/(main)/assets/$assetId"
    | "/(main)/profile/$username"
    | "/(main)/profile/"
    | "/(main)/~/artist/dashboard/"
    | "/(main)/~/artist/publishing/"
    | "/(main)/~/general/cart/"
    | "/(main)/~/general/explore/"
    | "/(main)/~/general/favorites/"
    | "/(main)/~/general/feed/"
    | "/(main)/~/general/purchased-models/";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  authRouteRoute: typeof authRouteRouteWithChildren;
  mainCartRoute: typeof mainCartRoute;
  mainDashboardRoute: typeof mainDashboardRoute;
  mainMyModelsRoute: typeof mainMyModelsRoute;
  mainMySalesRoute: typeof mainMySalesRoute;
  mainPlaygroundRoute: typeof mainPlaygroundRoute;
  mainPublishingRoute: typeof mainPublishingRoute;
  mainChar126ArtistRouteRoute: typeof mainChar126ArtistRouteRouteWithChildren;
  mainChar126GeneralRouteRoute: typeof mainChar126GeneralRouteRouteWithChildren;
  mainAssetsAssetIdRoute: typeof mainAssetsAssetIdRoute;
  mainProfileUsernameRoute: typeof mainProfileUsernameRoute;
  mainProfileIndexRoute: typeof mainProfileIndexRoute;
}
export interface FileServerRoutesByFullPath {
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
  "/api/imagekit/upload": typeof ApiImagekitUploadServerRoute;
}
export interface FileServerRoutesByTo {
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
  "/api/imagekit/upload": typeof ApiImagekitUploadServerRoute;
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport;
  "/api/auth/$": typeof ApiAuthSplatServerRoute;
  "/api/imagekit/upload": typeof ApiImagekitUploadServerRoute;
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath;
  fullPaths: "/api/auth/$" | "/api/imagekit/upload";
  fileServerRoutesByTo: FileServerRoutesByTo;
  to: "/api/auth/$" | "/api/imagekit/upload";
  id: "__root__" | "/api/auth/$" | "/api/imagekit/upload";
  fileServerRoutesById: FileServerRoutesById;
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute;
  ApiImagekitUploadServerRoute: typeof ApiImagekitUploadServerRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/(auth)": {
      id: "/(auth)";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof authRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/publishing": {
      id: "/(main)/publishing";
      path: "/publishing";
      fullPath: "/publishing";
      preLoaderRoute: typeof mainPublishingRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/playground": {
      id: "/(main)/playground";
      path: "/playground";
      fullPath: "/playground";
      preLoaderRoute: typeof mainPlaygroundRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/my-sales": {
      id: "/(main)/my-sales";
      path: "/my-sales";
      fullPath: "/my-sales";
      preLoaderRoute: typeof mainMySalesRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/my-models": {
      id: "/(main)/my-models";
      path: "/my-models";
      fullPath: "/my-models";
      preLoaderRoute: typeof mainMyModelsRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/dashboard": {
      id: "/(main)/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof mainDashboardRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/cart": {
      id: "/(main)/cart";
      path: "/cart";
      fullPath: "/cart";
      preLoaderRoute: typeof mainCartRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(auth)/auth": {
      id: "/(auth)/auth";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof authAuthRouteImport;
      parentRoute: typeof authRouteRoute;
    };
    "/(main)/profile/": {
      id: "/(main)/profile/";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof mainProfileIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/profile/$username": {
      id: "/(main)/profile/$username";
      path: "/profile/$username";
      fullPath: "/profile/$username";
      preLoaderRoute: typeof mainProfileUsernameRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/assets/$assetId": {
      id: "/(main)/assets/$assetId";
      path: "/assets/$assetId";
      fullPath: "/assets/$assetId";
      preLoaderRoute: typeof mainAssetsAssetIdRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/~/general": {
      id: "/(main)/~/general";
      path: "/~/general";
      fullPath: "/~/general";
      preLoaderRoute: typeof mainChar126GeneralRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/~/artist": {
      id: "/(main)/~/artist";
      path: "/~/artist";
      fullPath: "/~/artist";
      preLoaderRoute: typeof mainChar126ArtistRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/(main)/~/general/purchased-models/": {
      id: "/(main)/~/general/purchased-models/";
      path: "/purchased-models";
      fullPath: "/~/general/purchased-models";
      preLoaderRoute: typeof mainChar126GeneralPurchasedModelsIndexRouteImport;
      parentRoute: typeof mainChar126GeneralRouteRoute;
    };
    "/(main)/~/general/feed/": {
      id: "/(main)/~/general/feed/";
      path: "/feed";
      fullPath: "/~/general/feed";
      preLoaderRoute: typeof mainChar126GeneralFeedIndexRouteImport;
      parentRoute: typeof mainChar126GeneralRouteRoute;
    };
    "/(main)/~/general/favorites/": {
      id: "/(main)/~/general/favorites/";
      path: "/favorites";
      fullPath: "/~/general/favorites";
      preLoaderRoute: typeof mainChar126GeneralFavoritesIndexRouteImport;
      parentRoute: typeof mainChar126GeneralRouteRoute;
    };
    "/(main)/~/general/explore/": {
      id: "/(main)/~/general/explore/";
      path: "/explore";
      fullPath: "/~/general/explore";
      preLoaderRoute: typeof mainChar126GeneralExploreIndexRouteImport;
      parentRoute: typeof mainChar126GeneralRouteRoute;
    };
    "/(main)/~/general/cart/": {
      id: "/(main)/~/general/cart/";
      path: "/cart";
      fullPath: "/~/general/cart";
      preLoaderRoute: typeof mainChar126GeneralCartIndexRouteImport;
      parentRoute: typeof mainChar126GeneralRouteRoute;
    };
    "/(main)/~/artist/publishing/": {
      id: "/(main)/~/artist/publishing/";
      path: "/publishing";
      fullPath: "/~/artist/publishing";
      preLoaderRoute: typeof mainChar126ArtistPublishingIndexRouteImport;
      parentRoute: typeof mainChar126ArtistRouteRoute;
    };
    "/(main)/~/artist/dashboard/": {
      id: "/(main)/~/artist/dashboard/";
      path: "/dashboard";
      fullPath: "/~/artist/dashboard";
      preLoaderRoute: typeof mainChar126ArtistDashboardIndexRouteImport;
      parentRoute: typeof mainChar126ArtistRouteRoute;
    };
  }
}
declare module "@tanstack/react-start/server" {
  interface ServerFileRoutesByPath {
    "/api/imagekit/upload": {
      id: "/api/imagekit/upload";
      path: "/api/imagekit/upload";
      fullPath: "/api/imagekit/upload";
      preLoaderRoute: typeof ApiImagekitUploadServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
    "/api/auth/$": {
      id: "/api/auth/$";
      path: "/api/auth/$";
      fullPath: "/api/auth/$";
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport;
      parentRoute: typeof rootServerRouteImport;
    };
  }
}

interface authRouteRouteChildren {
  authAuthRoute: typeof authAuthRoute;
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authAuthRoute: authAuthRoute,
};

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
);

interface mainChar126ArtistRouteRouteChildren {
  mainChar126ArtistDashboardIndexRoute: typeof mainChar126ArtistDashboardIndexRoute;
  mainChar126ArtistPublishingIndexRoute: typeof mainChar126ArtistPublishingIndexRoute;
}

const mainChar126ArtistRouteRouteChildren: mainChar126ArtistRouteRouteChildren =
  {
    mainChar126ArtistDashboardIndexRoute: mainChar126ArtistDashboardIndexRoute,
    mainChar126ArtistPublishingIndexRoute:
      mainChar126ArtistPublishingIndexRoute,
  };

const mainChar126ArtistRouteRouteWithChildren =
  mainChar126ArtistRouteRoute._addFileChildren(
    mainChar126ArtistRouteRouteChildren,
  );

interface mainChar126GeneralRouteRouteChildren {
  mainChar126GeneralCartIndexRoute: typeof mainChar126GeneralCartIndexRoute;
  mainChar126GeneralExploreIndexRoute: typeof mainChar126GeneralExploreIndexRoute;
  mainChar126GeneralFavoritesIndexRoute: typeof mainChar126GeneralFavoritesIndexRoute;
  mainChar126GeneralFeedIndexRoute: typeof mainChar126GeneralFeedIndexRoute;
  mainChar126GeneralPurchasedModelsIndexRoute: typeof mainChar126GeneralPurchasedModelsIndexRoute;
}

const mainChar126GeneralRouteRouteChildren: mainChar126GeneralRouteRouteChildren =
  {
    mainChar126GeneralCartIndexRoute: mainChar126GeneralCartIndexRoute,
    mainChar126GeneralExploreIndexRoute: mainChar126GeneralExploreIndexRoute,
    mainChar126GeneralFavoritesIndexRoute:
      mainChar126GeneralFavoritesIndexRoute,
    mainChar126GeneralFeedIndexRoute: mainChar126GeneralFeedIndexRoute,
    mainChar126GeneralPurchasedModelsIndexRoute:
      mainChar126GeneralPurchasedModelsIndexRoute,
  };

const mainChar126GeneralRouteRouteWithChildren =
  mainChar126GeneralRouteRoute._addFileChildren(
    mainChar126GeneralRouteRouteChildren,
  );

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  mainCartRoute: mainCartRoute,
  mainDashboardRoute: mainDashboardRoute,
  mainMyModelsRoute: mainMyModelsRoute,
  mainMySalesRoute: mainMySalesRoute,
  mainPlaygroundRoute: mainPlaygroundRoute,
  mainPublishingRoute: mainPublishingRoute,
  mainChar126ArtistRouteRoute: mainChar126ArtistRouteRouteWithChildren,
  mainChar126GeneralRouteRoute: mainChar126GeneralRouteRouteWithChildren,
  mainAssetsAssetIdRoute: mainAssetsAssetIdRoute,
  mainProfileUsernameRoute: mainProfileUsernameRoute,
  mainProfileIndexRoute: mainProfileIndexRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiImagekitUploadServerRoute: ApiImagekitUploadServerRoute,
};
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>();
